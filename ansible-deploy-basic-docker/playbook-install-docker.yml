---
# @Author: Vincent Pang / nzvincent@gmail.com
# Deploy standalone Docker CE to 64 bits Ubuntu and Debian

- hosts: all
  become: yes
  become_user: root
  become_method: sudo
  gather_facts: true
  

  tasks:
  
  #- fail:
  #    msg: "This script only run on 64 bits OS"
  #  when: ansible_architecture != "64 bits"
  
  ############################
  # Block: for Debian / Ubuntu
  ############################
  - name: For Debian and Ubuntu Only  
    block:
    
    - set_fact:
        fact_docker_gpg_url: https://download.docker.com/linux/debian/gpg
        fact_docker_repo_url: https://download.docker.com/linux/debian
      when: ansible_distribution == 'Debian' 
 
    - set_fact:
        fact_docker_gpg_url: https://download.docker.com/linux/ubuntu/gpg
        fact_docker_repo_url: https://download.docker.com/linux/ubuntu
      when: ansible_distribution == 'Ubuntu' 
    
    - name: Update all packages to the latest version
      apt:
        upgrade: dist
        update_cache: yes
        
    - name: Install common packages
      apt: 
        name: "{{ item }}" 
        state: latest
      loop:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common
        - libxss1
        - aptitude

    - name: Add Dockerâ€™s official GPG key - old school way
      shell: |
        curl -fsSL {{ fact_docker_gpg_url }} | sudo apt-key add -
      ignore_errors: yes
      
    - name: Add Docker respository - old school way
      shell: |
        add-apt-repository \
           "deb [arch=amd64] {{ fact_docker_repo_url }} \
           $(lsb_release -cs) \
           stable"
      ignore_errors: yes
      
    - name: Update all packages to the latest version
      apt:
        upgrade: dist
        update_cache: yes
        
    - name: Install Docker packages
      apt: 
        name: "{{ item }}" 
        state: latest
      loop:
        - docker-ce 
        - docker-ce-cli 
        - containerd.io

    - name: Enable and start up Docker service
      service:
        name: docker
        state: started
        enabled: yes

    - name: Verify Docker installation
      shell: |
        docker --version
        docker images
      register: command_output

    - debug: msg="{{ command_output.stdout.split("\n") }}"    
    when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' 
